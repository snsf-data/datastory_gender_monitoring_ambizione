---
title: "`r params$title`"
format:
  html:
    toc: false
    css: ["style.css"]
    mainfont: Theinhardt
    fontsize: "16px"
    # To use instead of self-contained that has been deprecated
    embed-resources: true
    # Using custom page layout (via 'style.css')
    page-layout: custom
    # Open link in a new window by default
    link-external-newwindow: true
    # Display footnotes in pop-up window when hovering on it
    footnotes-hover: true
params:
  title: ""
  publication_date: ""
  lang: "fr"
  doi: ""
  github_url: ""
editor_options: 
  chunk_output_type: console
---

```{r general-setup, include=FALSE}

## This file contains the ENGLISH version of the data story

# Set general chunk options
knitr::opts_chunk$set(
  echo = FALSE, fig.showtext = TRUE, fig.retina = 3, fig.align = "center",
  warning = FALSE, message = FALSE
)

# Install snf.datastory package if not available, otherwise load it
if (!require("snf.datastory")) {
  if (!require("devtools")) {
    install.packages("devtools")
    library(devtools)
  }
  install_github("snsf-data/snf.datastory")
  library(snf.datastory)
}

# Load packages
library(tidyverse)
library(lubridate)
library(scales)
library(conflicted)
library(jsonlite)
library(here)
library(glue)
library(ggiraph)
library(showtext)
library(systemfonts)

# Conflict preferences
conflict_prefer("filter", "dplyr")
conflict_prefer("get_datastory_theme", "snf.datastory")
conflict_prefer("get_datastory_scheme", "snf.datastory")

is_theinhardt_available <- file.exists(here("fonts", "TheinhardtReg.otf"))

if (is_theinhardt_available) {
  
  sysfonts::font_add(
    family = "Theinhardt",
    regular = here("fonts", "TheinhardtReg.otf"),
    bold = here("fonts", "TheinhardtBold.otf"),
    bolditalic = here("fonts", "TheinhardtBoldIt.otf"),
    italic = here("fonts", "TheinhardtRegIt.otf"),
  )
  
  # Need to register the font to allow its use by ggiraph when creating SVG
  # files.
  if(!font_family_exists("Theinhardt")){
    
    # Register existing/downloaded fonts
    register_font(
      name = "Theinhardt",
      plain = list("fonts/TheinhardtReg.otf", 0),
      bold = list("fonts/TheinhardtBold.otf", 0),
      italic = list("fonts/TheinhardtRegIt.otf", 0),
      bolditalic = list("fonts/TheinhardtBoldIt.otf", 0)
    )
  }
  
  font <- "Theinhardt"
  
} else {
  
  font <- "Arial"
  
}

# Need if we want to use the registered font in ggiraph plots
showtext_auto()

# Increase showtext package font resolution
showtext_opts(dpi = 320)

# Set the locale for date formatting (Windows)
Sys.setlocale(
  "LC_TIME",
  switch(
    params$lang,
    en = "English",
    de = "German",
    fr = "French"
  )
)
Sys.setlocale("LC_TIME", "fr_CH.utf8")

# Create function to print number with local language-specific format
print_num <- function(x) snf.datastory::print_num(x, lang = params$lang)

# Knitr hook for local formatting of printed numbers
knitr::knit_hooks$set(
  inline <- function(x) {
    if (!is.numeric(x)) {
      x
    } else {
      print_num(x)
    }
  }
)

# Function that returns the desired language version of a string, given three
# language strings are provided to the function.
translate <- function(en_string = "NOT TRANSLATED",
                      de_string = "NOT TRANSLATED",
                      fr_string = "NOT TRANSLATED",
                      lang = "en") {
  
  string <-
    case_when(
      lang == "en" ~ en_string, 
      lang == "de" ~ de_string, 
      lang == "fr" ~ fr_string, 
      TRUE ~ "NO VALID LANGUAGE SPECIFIED"
    )
  
  return(string)
  
}

```

```{r print-header-infos}
#| results: asis

# Add publication date to header
cat(format(as_datetime(params$publication_date), "%d.%m.%Y"))
```

```{r story-specific-setup}
#| include: false

# More needed packages:
library(lme4)
library(lmtest)
library(cowplot)
library(grid)
library(dbplyr)
library(stringi)
library(stringr)
library(purrr)
library(ggrepel)
library(kableExtra)
library(forcats)

# Do not show the summarise messages
options(dplyr.summarise.inform = FALSE)

# Set story-specific variables
# Start and end dates of the reporting period
since <- "2012-01-01"
up_to_date <- "2022-12-01"

# Load the data on Ambizione proposals 
data_ambizione <-
  read_csv(file = here("data", "gm_ambizione_data_2023-10-27.csv")) %>%
  # Encode some variables as factors & specify order of the levels
  mutate(
    research_area = factor(research_area, levels = c("SSH", "MINT", "LS")),
    gender = factor(gender, levels = c("Male", "Female")),
    previous_snsf_funding = factor(
      previous_snsf_funding,
      levels = c("Grant(s)",
                 "Employment(s) only",
                 "None")
    ),
    call_end_date = ymd(call_end_date),
    call_month_numeric = lubridate::month(
        call_end_date,
        locale = "fr_CH.utf8",
        label = FALSE),
    call_name = as.factor(paste(
      case_when(call_month_numeric == 1 ~ "Janv.",
                call_month_numeric == 2 ~ "Févr.",
                call_month_numeric == 11 ~ "Nov.",
                TRUE ~ "Unknown"),
      year(call_end_date)
    ))
  )

# Language-specific recoding
data_ambizione <- data_ambizione %>%
  mutate(
    research_area = fct_recode(
      research_area,
      SHS = "SSH",
      MINT = "MINT",
      SV = "LS"
    ),
    # Keep English gender labels for use in code
    gender_en = gender,
    gender = fct_recode(gender, Hommes = "Male", Femmes = "Female"),
    # Institution type labels for plot
    inst_type = case_when(
      inst_type == "Cantonal university" ~ "Univ.\n cantonale",
      inst_type == "ETH domain" ~ "Dom. des\n EPF",
      inst_type == "UAS/UTE" ~ "HES/HEP",
      inst_type == "Other" ~ "Autres"
    ),
    inst_type = factor(
      inst_type,
      levels = c("Univ.\n cantonale", "Dom. des\n EPF",
                 "HES/HEP", "Autres")
    ),
    # Previous SNSF funding labels for plot
    previous_snsf_funding = case_when(
      previous_snsf_funding == "Grant(s)" ~ "Octroi(s) d'un\n subside",
      previous_snsf_funding == "Employment(s) only" ~ "Emploi(s)\n uniquement",
      previous_snsf_funding == "None" ~ "Ni subside\n ni emploi"
    ),
    previous_snsf_funding = factor(
      previous_snsf_funding,
      levels = c("Octroi(s) d'un\n subside",
                 "Emploi(s)\n uniquement",
                 "Ni subside\n ni emploi")
    )
  )
```

```{r plotting-functions}
# Source the function for the odd-ratio-trend plots
source(here("helper_functions", "odds_ratio_plots.R"))

# Function to create ggiraph object
make_ggiraph <- function(ggobj,
                         height = 4,
                         stroke = "#ff0000") {
  girafe(
    ggobj = ggobj,
    height_svg = height,
    options = list(
      opts_toolbar(saveaspng = FALSE),
      opts_hover(css = paste0("fill:#ff0000;stroke:", stroke, ";")),
      opts_tooltip(
        css = get_ggiraph_tooltip_css(),
        opacity = 0.8,
        delay_mouseover = 0,
        delay_mouseout = 0
      )
    )
  )
}

# Function to plot success rates by applicant gender over time,
# for each research area and overall (if add_overall = TRUE)
plot_by_research_area_sr <- function(research_area,
                                     data_pooled = data_pooled,
                                     data_by_research_area = data_by_research_area,
                                     limits = c(0.18, .87),
                                     title = NULL,
                                     xlab = NULL,
                                     ylab = NULL,
                                     inverse_gender = FALSE,
                                     add_overall = FALSE) {
  # Subset research area when required
  if (research_area != "all") {
    data_by_research_area <- data_by_research_area %>%
      filter(research_area == research_area)
  }
  
  # When one plot "Overall" should be added
  if (add_overall) {
    data_by_research_area <- data_by_research_area %>%
      bind_rows(data_pooled %>%
                  mutate(
                    research_area = translate("Overall",
                                              "Insgesamt",
                                              "Général",
                                              params$lang)
                  ))
  }
  
  # Ordering of factor levels for research area
  data_by_research_area <- data_by_research_area %>%
    mutate(research_area =
             fct_relevel(
               research_area,
               c(
                 translate("Overall",
                           "Insgesamt",
                           "Général",
                           params$lang),
                 translate_research_area(research_area = "SSH",
                                         target_lang = params$lang),
                 translate_research_area(research_area = "MINT",
                                         target_lang = params$lang),
                 translate_research_area(research_area = "LS",
                                         target_lang = params$lang)
               )
             ))
  
  
  # Every second element to display
  calls_to_display <- data_by_research_area %>%
    distinct(call_end_date) %>%
    arrange(call_end_date) %>%
    pull()
  
  calls_to_display <-
    calls_to_display[seq(1, length(calls_to_display), 2)]
  
  # Create the plot
  p <- data_by_research_area %>%
    ggplot(
      mapping =
        aes(
          x = call_end_date,
          y = sr,
          group = gender,
          color = gender,
          tooltip = glue(
            "Domaine de recherche: {research_area}<br>",
            "Mise au concours: {call_name}<br>",
            "<b>Taux de réussite {gender}: {round(100*sr)}%</b>"
          ),
          data_id = rownames(.)
        )
    ) +
    geom_line(size = 0.5) +
    geom_point_interactive(size = 2) +
    labs(title = title, x = xlab, y = ylab) +
    scale_colour_manual(values = get_datastory_scheme(), "") +
    scale_y_continuous(labels = scales::percent, limits = limits) +
    get_datastory_theme(tick_axis = "x", gridline_axis = "y") +
    # scale_x_date(breaks = positions_calls_to_display, 
    #              labels = labels_calls_to_display) +
    scale_x_date(breaks = calls_to_display, date_labels = "%b.\n%Y") +
    theme(
      axis.text.y = element_text(size = 8),
      axis.title.x = element_text(size = 10),
      axis.title.y = element_text(size = 10),
      plot.margin = margin(0.5, 2, 1, 2, "mm")
    )
  
  # When we're plotting all research areas, we facet-wrap
  if (research_area == "all") {
    p <- p +
      facet_wrap( ~ research_area)
  }
  make_ggiraph(p)
}
```

```{r basic_summary-stats, warning=FALSE, message=FALSE}
# Compute some numbers for use in the text

# Number of calls
n_call <- data_ambizione %>%
  select(call_end_date) %>%
  distinct() %>%
  nrow()

# Total number of proposals
n_proposal <- nrow(data_ambizione)

# Total number of grants
n_grant <- data_ambizione %>%
  filter(is_approved == TRUE) %>%
  nrow()

# Total number of applicants
n_applicant <- data_ambizione %>%
  pull(applicant_id) %>%
  unique() %>%
  length()

# First and last year of the time period considered
first_year <- year(since)
last_year <- year(up_to_date)
n_year <- last_year - first_year + 1

# Number of proposals from female applicants
n_proposal_female <- data_ambizione %>%
  filter(gender == translate("Female",
                             "Frauen", 
                             "Femmes",
                              lang = params$lang)) %>%
  nrow()

# Total number of grants awarded to female applicants
n_grant_female <- data_ambizione %>%
  filter(gender == translate("Female",
                             "Frauen", 
                             "Femmes",
                              lang = params$lang),
         is_approved == TRUE) %>%
  nrow()

# Total number of grants awarded to male applicants
n_grant_male <- data_ambizione %>%
  filter(gender == translate("Male",
                             "Männer", 
                             "Hommes",
                              lang = params$lang),
         is_approved == TRUE) %>%
  nrow()

# Percentage of proposals from female applicants
perc_proposal_female <- 100 * n_proposal_female / n_proposal
# Percentage of grants awarded to female applicants
perc_grant_female <- 100 * n_grant_female / n_grant
```


<!-- Short lead (2-3 sentences) in bold -->

**Au cours des quatre premières années qui suivent le doctorat, les chercheurs et chercheuses peuvent demander un subside Ambizione. Entre 2012 et 2022, le FNS a accordé `r round(perc_grant_female, 0)` % de ces subsides à des femmes. D’où vient cette différence par rapport aux hommes ?**


Les femmes demeurent sous-représentées dans le paysage suisse de la recherche. Si, [dans certaines disciplines, le pourcentage des femmes est relativement élevé parmi les doctorant·es, le rapport femmes/hommes diminue](https://data.snf.ch/stories/plus-la-hierarchie-academique-est-elevee-plus-les-femmes-sont-rares-fr.html) au fur et à mesure de l’évolution de la carrière.

Un suivi de la réussite des femmes en début et en milieu de carrière est donc particulièrement important, afin de mettre en lumière d’éventuels biais de genre. Dans le cadre de la présente analyse, nous nous concentrons sur l’instrument d’encouragement [Ambizione](https://www.snf.ch/fr/N18L3oGWomTSSGkF/encouragement/carrieres/ambizione), qui s’adresse à des chercheurs et chercheuses en début de carrière souhaitant réaliser un projet de recherche de manière autonome au sein d’une haute école suisse.

Nous prenons en compte les douze mises au concours Ambizione de `r first_year` à `r last_year`, c’est-à-dire plus de `r print_num(4000)` requêtes Ambizione entièrement évaluées (voir l’encadré « jeu de données » pour plus de détails).


::: info-box

### Jeu de données

* Le jeu de données contient `r print_num(n_proposal)` requêtes Ambizione évaluées, soumises par `r print_num(n_applicant)` requérant·es au cours de la période `r first_year`–`r last_year`. 
* `r print_num(round(perc_proposal_female, 1))` % de ces demandes de financement ont été déposées par des chercheuses.
* Au total, `r n_grant` subsides Ambizione ont été accordés au cours de cette période. Les femmes ont bénéficié de `r print_num(round(perc_grant_female, 1))` % des subsides.
* En janvier 2017, la durée maximale des financements Ambizione est passée à 4 ans ; elle était de 3 ans auparavant.

:::


Notre analyse a abouti à trois conclusions majeures.


### 1. Pourcentage considérable de requêtes soumises par des femmes

Sur l’ensemble des mises au concours, la part de projets soumis par des femmes était comprise entre 30 et 40 %. Comme illustré dans le graphique ci-dessous, on note à cet égard une forte disparité entre les genres selon les domaines de recherche : c’est dans les disciplines MINT (mathématiques, sciences naturelles et ingénierie) que la proportion de femmes est la plus faible, avec moins de 30 %, ce qui n’est pas étonnant étant donné la [sous-représentation des femmes](https://data.snf.ch/stories/plus-la-hierarchie-academique-est-elevee-plus-les-femmes-sont-rares-fr.html) dans ces disciplines. En revanche, en sciences humaines et sociales (SHS), les soumissions sont pratiquement paritaires entre hommes et femmes à chaque appel à projets.

Le pourcentage des requérantes a eu tendance à augmenter légèrement ces dernières années, notamment en raison d’une hausse du pourcentage de demandes déposées par des femmes dans le domaine SV (sciences de la vie). Fait encourageant : dans les disciplines MINT également, le pourcentage de projets soumis par des femmes a eu propension à croître ces dernières années.


::: plot-box
::: plot-title
Pourcentage de requêtes déposées par des femmes dans le temps
:::

```{r submissions-by-gender-trends-plots}
#| out-width: "100%"
#| fig-height: 6

# Compute gender shares per call
pooled_perc_gender <- data_ambizione %>%
  count(gender, call_end_date, call_name) %>%
  group_by(call_end_date) %>%
  mutate(freq = n/sum(n)) %>%
  ungroup() %>%
  mutate(data_id = row_number())

# Compute gender shares per research area and call
perc_gender_by_research_area <- data_ambizione %>%
  filter(!is.na(call_end_date)) %>%
  group_by(research_area, gender, call_end_date, call_name) %>%
  count(gender, call_end_date) %>%
  group_by(research_area, call_end_date, call_name) %>%
  mutate(freq = n/sum(n)) %>%
  ungroup() %>%
  mutate(data_id = row_number() + nrow(pooled_perc_gender))

# Display all calls in the dataset
calls_to_display <- pooled_perc_gender %>%
  distinct(call_end_date) %>%
  arrange(call_end_date) %>%
  pull()

# Create the plot of the overall share of female applicants
p_overall <- pooled_perc_gender %>%
  filter(gender == translate("Female",
                             "Frauen",
                             "Femmes",
                             lang = params$lang)) %>%
  ggplot(
    aes(x = call_end_date, y = freq, group = 1,
        tooltip = glue(
          "Mise au concours: {call_name}<br>",
          "<b>{round(100*freq)}% {gender}</b>"
        ),
        data_id = data_id
    ),
    color = get_datastory_scheme(n_col = 4)[4]) +
  geom_line(size = 0.5) +
  geom_point_interactive(size = 2) +
  geom_hline(yintercept = 0.5, linetype = "dashed", size = 0.5) + 
  labs(title = translate("Overall", "Insgesamt", "Global", 
                         lang = params$lang),
                         x = NULL, y = NULL) +
  scale_y_continuous(labels = scales::percent, limits = c(0, 0.65)) +
  get_datastory_theme(tick_axis = "x", gridline_axis = "y") +
  scale_x_date(breaks = calls_to_display, date_labels = "%b.\n%Y") +
  theme(
    axis.text.y = element_text(size = 8),
    axis.title.x = element_text(size = 10),
    axis.title.y = element_text(size = 10),
    plot.margin = margin(0.5, 2, 10, 2, "mm")
  )

# Create the plot of the share of female applicants per research area
p_by_research_area <- perc_gender_by_research_area %>%
  filter(gender == translate("Female",
                             "Frauen",
                             "Femmes",
                             lang = params$lang)) %>%
  ggplot(
    aes(x = call_end_date, y = freq, group = research_area,
        color = research_area,
        tooltip = glue(
          "Domaine de recherche: {research_area}<br>", 
          "Mise au concours: {call_name}<br>",
          "<b>{round(100*freq)}% {gender}</b>"
        ),
        data_id = data_id
    )
  ) +
  geom_line(size = 0.5) +
  geom_point_interactive(size = 2) +
  geom_hline(yintercept = 0.5, linetype = "dashed", size = 0.5,
             color = "black") +
  labs(title = translate("By research area",
                         "Nach Forschungsbereich", 
                         "Par domaine de recherche",
                         lang = params$lang),
       x = NULL, y = NULL) +
  scale_colour_manual(values = get_datastory_scheme(n_col = 3)[c(2, 1, 3)]) +
  scale_y_continuous(labels = scales::percent, limits = c(0, 0.65)) +
  get_datastory_theme(tick_axis = "x", gridline_axis = "y") +
  scale_x_date(breaks = calls_to_display, date_labels = "%b.\n%Y") +
  theme(
    axis.text.y = element_text(size = 8),
    axis.title.x = element_text(size = 10),
    axis.title.y = element_text(size = 10),
    plot.margin = margin(t = 0.5, r = 2, b = 1, l = 2, "mm")
  )

# Arrange the two plots
make_ggiraph(plot_grid(plotlist = list(p_overall, p_by_research_area),
                       nrow = 2, rel_heights = c(1, 1.28)),
             height = 6)
```

::: caption

:::
:::


### 2. Taux de réussite global pratiquement identique pour les femmes et les hommes

Le tableau ci-après présente les taux de réussite, à savoir le pourcentage de requêtes entièrement évaluées ayant abouti à l’octroi d’un subside, sur l’ensemble des douze mises au concours. Le taux de réussite global était pratiquement identique pour les femmes et les hommes. Toutefois, dans les disciplines MINT, le taux de réussite des requérantes était supérieur à celui des requérants, et inversement dans les SHS.


::: plot-box
::: plot-title
Taux de réussite des requérantes et des requérants sur l’ensemble des douze mises au concours
:::
```{r sr-table}
# Compute success rate by gender over all calls
sr_summary <- data_ambizione %>%
  group_by(gender_en)  %>%
  summarise(SR = 100 * mean(is_approved, na.rm = TRUE)) %>%
  pivot_wider(names_from = gender_en,
              values_from = SR,
              names_prefix = "SR_") %>%
  mutate(research_area = translate("Overall",
                                   "Insgesamt",
                                   "Général",
                                   params$lang))

# Compute success rates by gender and research area over all calls
sr_summary_research_area <- data_ambizione %>%
  group_by(research_area, gender_en) %>%
  summarise(SR = 100 * mean(is_approved, na.rm = TRUE)) %>%
  pivot_wider(names_from = gender_en,
              values_from = SR,
              names_prefix = "SR_")

# Create a table with the success rates and
# the differences between the success rates by gender
sr_tab <- sr_summary_research_area %>%
  bind_rows(sr_summary) %>%
  mutate(
    diff = round(SR_Female, 1) - round(SR_Male, 1),
    SR_Female = paste0(format(
      SR_Female, digits = 3, nsmall = 1, 
      decimal.mark = "," 
    ), "%"),
    SR_Male = paste0(format(
      SR_Male, digits = 3, nsmall = 1,
      decimal.mark = "," 
    ), "%"),
    diff = paste0(format(diff, nsmall = 1,
                         decimal.mark = "," ), 
                  "%"),
    research_area = factor(
      research_area,
      levels = c(
        translate_research_area(research_area = "SSH",
                                target_lang = params$lang),
        translate_research_area(research_area = "MINT",
                                target_lang = params$lang),
        translate_research_area(research_area = "LS",
                                target_lang = params$lang),
        translate("Overall",
                  "Insgesamt",
                  "Général",
                  params$lang)
      )
    )
  )

# Adapt order of columns (SR Female before SR Male) and
# display the table
sr_tab[, c(1, 3, 2, 4)] %>%
  kable(
    col.names = c(
      translate("Research area", "Forschungsbereich", "Domaine de recherche",
                lang = params$lang),
      translate("SR Women", "EQ Frauen", "TS Femmes",
                lang = params$lang),
      translate("SR Men", "EQ Männer", "TS Hommes",
                lang = params$lang),
      translate(
        "Difference: SR Women - SR Men",
        "Unterschied: EQ Frauen - EQ Männer",
        "Différence: TS Femmes - TS Hommes",
        lang = params$lang
      )
    ),
    align = c("l", rep("r", times = 3))
  ) %>%
  row_spec(3, hline_after = T) %>%
  row_spec(4, bold = T)
```

::: caption

:::
:::

Si nous examinons les taux de réussite par mise au concours, présentés dans les graphiques ci-dessous, nous constatons des variations considérables :


::: plot-box
::: plot-title
Taux de réussite par genre dans le temps, globalement et par domaine de recherche
:::

```{r sr-trends-plot}
#| out-width: "100%"
#| fig-height: 3.5

# Compute success rates by gender and call
pooled_sr_gender <- data_ambizione %>%
  group_by(gender, call_end_date, call_name) %>%
  summarise(sr = mean(is_approved, na.rm = TRUE)) %>%
  ungroup()

# Compute success rates by research area, gender and call
sr_gender_by_research_area <- data_ambizione %>%
  filter(!is.na(call_end_date)) %>%
  group_by(research_area, gender, call_end_date, 
           call_name) %>%
  summarise(sr = mean(is_approved, na.rm = TRUE)) %>%
  ungroup()

# Plot the success rates by gender, overall and by research area
plot_by_research_area_sr(
  research_area = "all",
  data_pooled = pooled_sr_gender,
  data_by_research_area = sr_gender_by_research_area,
  inverse_gender = TRUE,
  title = NULL,
  xlab = NULL,
  limits = c(0, 0.6),
  ylab = translate("Success rate\n",
                   "Erfolgsquote\n",
                   "Taux de succès",
                   lang = params$lang),
  add_overall = TRUE
)
```

::: caption
Le taux de réussite global des femmes a été le plus élevé lors de la mise au concours de novembre 2017. Cette mise au concours revêt cependant un caractère particulier, car il s’agit du seul appel à projets Ambizione incluant PRIMA, l’instrument d’encouragement qui soutient les chercheuses à un stade de carrière légèrement plus avancé qu’Ambizione. Dans le cadre de cette mise au concours, treize requêtes soumises dans PRIMA, que le budget de cet instrument ne pouvait pas financer, ont été transférés dans Ambizione. Dix d’entre elles ont obtenu des subsides Ambizione.
:::
:::

Ces écarts dans les taux de réussite entre les femmes et les hommes au fil du temps sont-elles simplement le fait de fluctuations aléatoires, ou traduisent-elles des différences significatives relevant du genre dans les chances d’obtenir un subside ? Nous avons examiné cette question à l’aide de modèles statistiques.


### 3. Pas de différences significatives quant aux chances de succès

#### Facteurs pertinents autres que le genre

Les disparités apparentes entre les hommes et les femmes dans les octrois d’un financement lors de certaines mises au concours ne sont pas forcément dues au genre lui-même, mais plutôt à d’autres caractéristiques des candidat·es ou à des facteurs qui sont liés à la fois au genre et à l’octroi des subsides, c’est-à-dire à des facteurs confondant. Par exemple, le fait d’avoir déjà obtenu un subside du FNS peut être un facteur confondants : comme le montre le graphique ci-dessous, la proportion des requérant·es ayant, par le passé, bénéficié d’un subside du FNS était plus élevée chez les femmes. Et les requérant·es ayant déjà reçu un financement du FNS ont davantage de chances de voir leur demande retenue.

Les facteurs confondants potentiels dont nous avons tenu compte dans nos modèles statistiques sont les suivants :

* un financement antérieur par le FNS, selon les catégories suivantes : a) a déjà obtenu un subside du FNS, b) a été employé·e dans un projet sur les fonds du FNS mais n’a jamais été bénéficiaire d’un subside FNS, c) n’a jamais reçu de financement du FNS ;
* l’âge académique, à savoir le nombre d’années après le doctorat, comme mesure de l’expérience dans la recherche ;
* le type d’institution à laquelle le ou la candidat·e est affilié·e, selon les catégories suivantes : a) université cantonale, b) domaine des EPF, c) haute école spécialisée ou haute école pédagogique, d) autre.

Les graphiques ci-dessous illustrent la répartition de ces trois facteurs confondants sur l’ensemble des douze mises au concours.



```{r prev-funding-plot}

# Compute the shares of the previous funding categories by gender
prev_funding_summary <- data_ambizione %>%
  group_by(gender, previous_snsf_funding) %>%
  summarise(n = n()) %>%
  mutate(freq = n / sum(n)) %>%
  ungroup()

# Illustrate the distribution of the previous funding categories by gender
# by using a barplot
plot_prev_funding <-
  prev_funding_summary %>%
  mutate(
    previous_funding_label = str_replace(previous_snsf_funding, "\n", " "),
    data_id = paste0(row_number(), "a")
  ) %>% 
  ggplot(aes(
    previous_snsf_funding,
    freq,
    group = gender,
    tooltip = glue(
      "Financement antérieur par le FNS: {previous_funding_label}<br>",
      "<b>{round(100*freq)}% de requêtes soumises par des {gender}<b>"
    ),
    data_id = data_id
  )) +
  geom_col_interactive(aes(fill = gender),
                       position = position_dodge(preserve = "single"),
                       color = "white") +
  scale_y_continuous(labels = percent_format(accuracy = 1),
                     limits = c(0, 0.7)) +
  scale_fill_manual(values = get_datastory_scheme()) +
  guides(fill = guide_legend(nrow = 1)) +
  labs(
    title = translate(
      "Previous funding",
      "Vorherige Förderung",
      "Financement antérieur",
      lang = params$lang
    ),
    x = NULL,
    y = translate(
      "% of proposals\n",
      "Gesuche in Prozent\n",
      "% de requêtes soumises\n",
      lang = params$lang
    )
  ) +
  get_datastory_theme(gridline_axis = "y",
                      legend_position = "none") +
  theme(axis.title.y = element_text(size = 9))
```


```{r acad-age-plot}
#| out-width: "100%"
#| fig-height: 3.5

# Create groups for the academic age
data_ambizione <- data_ambizione %>%
  mutate(
    acad_age_group = case_when(
      academic_age < 2 ~ "0-1",
      academic_age < 3 ~ "2",
      academic_age < 4 ~ "3",
      academic_age < 5 ~ "4",
      academic_age < 6 ~ "5",
      academic_age >= 6 ~ ">5",
      TRUE ~ "missing"
    ),
    acad_age_group = factor(acad_age_group,
                            levels = c("0-1", "2", "3", "4", "5", ">5"))
  )

# Compute shares of the academic age groups for each gender
acad_age_summary <- data_ambizione %>%
  group_by(gender, acad_age_group) %>%
  summarise(n = n()) %>%
  mutate(freq = n / sum(n)) %>%
  ungroup()

# Illustrate the distribution of the academic age groups by gender
# by using a barplot
plot_acad_age <- acad_age_summary %>%
  mutate(data_id = paste0(row_number(), "c")) %>%
  ggplot(aes(
    acad_age_group,
    freq,
    group = gender,
    tooltip = glue(
      "Âge académique: {acad_age_group}<br>",
      "<b>{round(100*freq)}% de requêtes soumises par des {gender}<b>"
    ),
    data_id = data_id
  )) +
  geom_col_interactive(aes(fill = gender),
                       position = position_dodge(preserve = "single"),
                       color = "white") +
  scale_y_continuous(labels = percent_format(accuracy = 1)) +
  scale_fill_manual(values = get_datastory_scheme()) +
  guides(fill = guide_legend(nrow = 1)) +
  labs(
    title = translate(
      "Academic age (years)",
      "Akademisches Alter (Jahre)",
      "Âge académique (en années)",
      lang = params$lang
    ),
    x = NULL,
    y = translate(
      "% of proposals\n",
      "Gesuche in Prozent\n",
      "% de requêtes soumises\n",
      lang = params$lang
    )
  ) +
  get_datastory_theme(gridline_axis = "y",
                      legend_position = "none") +
  theme(axis.title.y = element_text(size = 9))
```


```{r inst-type-plot}

# Rename and reorder the institution types for the plot
data_ambizione <- data_ambizione %>%
  # No additional abbreviations needed in French
  mutate(inst_type_renamed = inst_type)

# Compute shares of institution types for each gender
inst_type_summary <- data_ambizione %>%
  group_by(gender, inst_type_renamed) %>%
  summarise(n = n()) %>%
  mutate(freq = n / sum(n)) %>%
  ungroup()

# Illustrate the distribution of the institution types by gender
# by using a barplot
plot_inst_type_with_legend <- inst_type_summary %>%
  mutate(
    inst_type_label = str_replace(inst_type_renamed, "\n", " "),
    data_id = paste0(row_number(), "b")
  ) %>% 
  ggplot(aes(
    inst_type_renamed,
    freq,
    group = gender,
    tooltip = glue(
      "Type d'institution: {inst_type_label}<br>",
      "<b>{round(100*freq)}% de requêtes soumises par des {gender}<b>"
    ),
    data_id = data_id
  )) +
  geom_col_interactive(aes(fill = gender),
                       position = position_dodge(preserve = "single"),
                       color = "white") +
  scale_y_continuous(labels = percent_format(accuracy = 1),
                     limits = c(0, 0.7)) +
  scale_fill_manual(values = get_datastory_scheme()) +
  guides(fill = guide_legend(nrow = 2)) +
  labs(
    title = translate(
      "Institution types",
      "Institutionsarten",
      "Types d' institutions",
      lang = params$lang
    ),
    x = NULL,
    y = NULL
  ) +
  get_datastory_theme(legend_margin = margin(l = 35, b = 80)) +
  theme(
    axis.title.y = element_text(size = 9),
    legend.text = element_text(
    margin = margin(r = 4, unit = "mm"),
    ),
  )

# Extract the legend to add it to the combined plot
legend_confounder_distr <-
  cowplot::get_legend(plot_inst_type_with_legend)

plot_inst_type <- plot_inst_type_with_legend +
  get_datastory_theme(legend_position = "none",
                      gridline_axis = "y")
```


::: plot-box
::: plot-title
Répartition des facteurs confondants
:::
```{r plots-confounders-distribution}
#| out-width: "100%"
#| fig-height: 6

# Arrange all 3 confounder distribution plots
make_ggiraph(plot_grid(
  plotlist = list(
    plot_prev_funding,
    plot_inst_type,
    plot_acad_age,
    legend_confounder_distr
  ),
  nrow = 2
), stroke = "")
```

::: caption
Abréviations : Univ. cantonale = Université cantonale, Dom. des EPF = Domaine des EPF, HES/HEP = Hautes écoles spécialisées et hautes écoles pédagogiques.
:::
:::


#### Quantifier l’octroi de subsides selon le genre

Comment les chances de réussite spécifiques au genre des requérant·es ont-elles évolué au fil du temps ? Pour répondre à cette question, des estimations ont été effectuées dans les trois domaines de recherche à l’aide d’un modèle statistique (régression logistique), en tenant compte des facteurs confondants susmentionnés (pour plus de détails, voir l’encadré « Méthodes statistiques »).

Nous concluons que les écarts observés entre les genres, de l’ordre de 5 %, ne sont pas statistiquement significatifs. Les femmes et les hommes ont donc fondamentalement les mêmes chances d’obtenir un subside lors du dépôt d’une requête.

Les résultats sont présentés ci-dessous. Un rapport des chances associé au genre de 1 traduit une égalité des chances entre hommes et femmes de voir leur demande de financement approuvée. Un rapport des chances supérieur ou inférieur à 1 traduit des chances plus élevées respectivement pour les candidat·es de genre féminin ou masculin (pour les définitions, voir l’encadré « Probabilité de réussite, rapports des chances et intervalles de confiance » dans [le récit de données sur le monitoring de l’égalité des genres et l’influence des facteurs confondants](https://data.snf.ch/stories/impact-des-variables-confondantes-fr.html)).

Par exemple, le rapport des chances associé au genre dans les SHS pour la période 2021/2022 est de 1,28. Cela signifie que la chance de voir sa demande de financement approuvée était 1,28 fois supérieure pour les requérantes que pour les requérants. Comme l’intervalle de confiance à 95 % comprend la valeur de 1 pour chaque paire de mises au concours, les écarts observés entre les genres en ce qui concerne l’octroi d’un financement, de l’ordre de 5 %, ne sont donc pas statistiquement significatifs.


```{r models-or-trends-adjusted, warning = TRUE, message=TRUE, results='hide'}
# Add centered academic age to dataset
data_ambizione <- data_ambizione %>%
  group_by(research_area) %>%
  # Center the academic age
  mutate(scale_acad_age = scale(academic_age, scale = FALSE)) %>%
  ungroup()

# Group calls into pairs for use in the logistic regression models
data_ambizione <- data_ambizione %>%
  mutate(
    call_period = case_when(
      year(call_end_date) <= 2013 ~ "2012/2013",
      year(call_end_date) <= 2015 ~ "2014/2015",
      call_end_date <= ymd("2017-06-01") ~ "2016/2017",
      year(call_end_date) <= 2018 ~ "2017/2018",
      year(call_end_date) <= 2020 ~ "2019/2020",
      year(call_end_date) <= 2022 ~ "2021/2022",
      TRUE ~ "unknown time period"
    ),
    call_period = as.factor(call_period)
  )

# Formula for logistic regression (adjusted by confounders)
formula_adj <- as.numeric(is_approved) ~ call_period * gender +
  previous_snsf_funding + scale_acad_age + inst_type

# Computation of models for odds ratio trends (adjusted by confounders):
# Fit a separate model for each research area
research_areas <- c("SHS", "MINT", "SV")

# Save the results in a list
fit_adjusted <- lapply(1:3, function(i) {
  data_subset <- data_ambizione %>%
    filter(research_area == research_areas[i])
  return(glm(formula_adj, family = "binomial", data = data_subset))
})
# Add names to the list
names(fit_adjusted) <- research_areas
```

::: plot-box
::: plot-title
Rapports des chances associés au genre des requérant·es au fil du temps
:::

```{r plots-or-trends}
#| out-width: "100%"
#| fig-height: 4

# Get the number of time periods to show (points in the plot)
n_time_periods <- data_ambizione %>%
  pull(call_period) %>%
  unique() %>%
  length()

# Get the names of the dummy variables (the same for all 3 research areas)
names_coef <- names(coef(fit_adjusted[["SHS"]]))
dummy_variables_adj <-
  c(1, rep(0, length(names_coef[-c(which(names_coef == "(Intercept)"),
                                   which(grepl("call_period", names_coef)))]) - 1))
# Select the colors to use
colors <- get_datastory_scheme(n_col = 3)[c(2, 1, 3)]

# Set the y axis limits
ylim_OR_plot <- c(0.01, 4)
# Specify the positions and labels for the x axis
ats <- seq(1, length(levels(data_ambizione$call_period)))
axis_ticks <- levels(data_ambizione$call_period)

odd_ratio_all_areas <-
  bind_rows(
    prep_odd_ratio(
      model = fit_adjusted[["SHS"]],
      dummy_variables = dummy_variables_adj,
      number_time_periods = n_time_periods,
      time_period = axis_ticks,
      ci = TRUE,
      mixed = FALSE,
      area = translate_research_area("SSH", target_lang = params$lang)
    ),
    prep_odd_ratio(
      model = fit_adjusted[["MINT"]],
      dummy_variables = dummy_variables_adj,
      number_time_periods = n_time_periods,
      time_period = axis_ticks,
      ci = TRUE,
      mixed = FALSE,
      area = translate_research_area("MINT", target_lang = params$lang)
    ),
    prep_odd_ratio(
      model = fit_adjusted[["SV"]],
      dummy_variables = dummy_variables_adj,
      number_time_periods = n_time_periods,
      time_period = axis_ticks,
      ci = TRUE,
      mixed = FALSE,
      area = translate_research_area("LS", target_lang = params$lang)
    )
  )

odd_ratio_all_areas_plot <-
  odd_ratio_all_areas %>%
  mutate(
    period_label = str_replace(period, "/", "\n"),
    area = factor(area, levels = c("SHS", "MINT", "SV")),
    data_id = row_number()
  ) %>%
  ggplot() +
  aes(
    x = period_label,
    y = or,
    color = area,
    group = area,
    tooltip =
      paste0(
        "Rapport des chances: ",
        round(or, 2),
        "\nDomaine de recherche: ",
        area,
        "\nPériode: ",
        period
      ),
    data_id = data_id
  ) +
  geom_hline(yintercept = 1, linetype = "dashed") +
  geom_line(linewidth = 0.5) +
  geom_point_interactive(size = 2) +
  geom_line(aes(y = lower_limit),
            linetype = "dashed",
            linewidth = 0.5) +
  geom_line(aes(y = upper_limit),
            linetype = "dashed",
            linewidth = 0.5) +
  labs(y = translate("Odds Ratio",
                     "Chancenverhältnis",
                     "Rapport des chances",
                     lang = params$lang),
       x = translate("Year of call deadlines",
                     "Eingabejahr",
                     "Année de la mise au concours",
                     lang = params$lang),) +
  scale_y_continuous(limits = c(0.01, 4)) +
  scale_color_manual(values = get_datastory_scheme(n_col = 3)[c(2, 1, 3)]) +
  facet_wrap( ~ area, ncol = 2) +
  get_datastory_theme(title_axis = c("x", "y")) +
  theme(legend.position = "")

make_ggiraph(odd_ratio_all_areas_plot)
```

::: caption
Rapports des chances ajustés associés au genre des requérant·es (points) et intervalles de confiance à 95 % (lignes pointillées) par paire de mises au concours consécutives. Un rapport des chances supérieur à 1 traduit des chances plus élevées d’obtenir un financement pour les requérantes. Les estimations du rapport des chances sont ajustées selon trois facteurs : un financement antérieur par le FNS, l’âge académique et le type d’institution. Les années de clôture du dépôt des demandes figurent sur l’axe des abscisses (x). Ainsi, « 2016/2017 » se rapporte aux mises au concours de février 2016 et de janvier 2017, tandis que « 2017/2018 » se rapporte aux mises au concours de novembre 2017 et de novembre 2018.
:::
:::

La circonstance que moins de femmes (`r n_grant_female`) que d’hommes (`r n_grant_male`) aient obtenu un subside Ambizione au cours des onze dernières années s’explique par le nombre moins élevé de demandes déposées par les requérantes, et non par une différence significative, fondée sur le genre, dans les chances de succès. Il demeure néanmoins nécessaire d’assurer un suivi de l’ensemble des instruments d’encouragement afin de pouvoir relever d’éventuels biais liés au genre dans l’évaluation des recherches.


::: info-box

### Méthodes statistiques : modèles de l’octroi d’un financement selon le genre au fil du temps

Afin de modéliser le rapport entre le genre et l’octroi d’un financement, nous avons utilisé des modèles de régression logistique. L’octroi d’un financement constituait le résultat binaire et le genre la variable explicative. Nous y avons intégré les facteurs confondants cités ci-avant comme variables explicatives supplémentaires.

Pour pouvoir analyser les tendances s’inscrivant dans la durée, nous avons en sus introduit dans les modèles de régression le facteur temps (délais de soumission des mises au concours) ainsi qu’un terme d’interaction entre le genre et le temps. Le nombre de mises au concours étant relativement élevé, nous les avons regroupées en paires de mises au concours consécutives et estimées un rapport des chances associé au genre pour chacune de ces paires.

Des analyses antérieures ayant démontré que l’association entre le genre et l’octroi d’un encouragement pouvait varier considérablement en fonction des domaines de recherche, nous avons créé un modèle distinct pour chacun des trois domaines de recherche (SHS, MINT et SV).

:::

Les données, le texte et le code de ce récit de données sont [disponibles sur Github](`r params$github_url`) et [archivés sur Zenodo](`r params$doi`). <br>DOI: `r str_remove(params$doi, "https://doi.org/")`

```{r prevent-internal-snsf-packages, include=FALSE}
#| include: false

# Internal SNSF packages must not be used in data stories, as their
# pre-processing functions are internal and the corporate design differs from
# the data portal.
if (any(c("snfverse", "snf.preprocessing", "snf.plot") %in% 
        loadedNamespaces())) {
  stop(glue(
    "You must not use internal SNSF packages in data stories.",
    " Please resort to snf.datastory."
  ))
}
```
